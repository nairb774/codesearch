// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: cmd/storage/service/service.proto

package service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetShardMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId string `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Suffix  string `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
}

func (x *GetShardMetadataRequest) Reset() {
	*x = GetShardMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_storage_service_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardMetadataRequest) ProtoMessage() {}

func (x *GetShardMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_storage_service_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetShardMetadataRequest) Descriptor() ([]byte, []int) {
	return file_cmd_storage_service_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetShardMetadataRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *GetShardMetadataRequest) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

type GetShardMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length int64 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *GetShardMetadataResponse) Reset() {
	*x = GetShardMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_storage_service_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardMetadataResponse) ProtoMessage() {}

func (x *GetShardMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_storage_service_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetShardMetadataResponse) Descriptor() ([]byte, []int) {
	return file_cmd_storage_service_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetShardMetadataResponse) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type ReadShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId string `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Suffix  string `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	Offset  int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// If length will cause out of bounds reads, an error is returned.
	// Length must be >= 0.
	Length int32 `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *ReadShardRequest) Reset() {
	*x = ReadShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_storage_service_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadShardRequest) ProtoMessage() {}

func (x *ReadShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_storage_service_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadShardRequest.ProtoReflect.Descriptor instead.
func (*ReadShardRequest) Descriptor() ([]byte, []int) {
	return file_cmd_storage_service_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReadShardRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *ReadShardRequest) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *ReadShardRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadShardRequest) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type ReadShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *ReadShardResponse) Reset() {
	*x = ReadShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_storage_service_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadShardResponse) ProtoMessage() {}

func (x *ReadShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_storage_service_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadShardResponse.ProtoReflect.Descriptor instead.
func (*ReadShardResponse) Descriptor() ([]byte, []int) {
	return file_cmd_storage_service_service_proto_rawDescGZIP(), []int{3}
}

func (x *ReadShardResponse) GetBlock() []byte {
	if x != nil {
		return x.Block
	}
	return nil
}

type WriteShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// shard_id must be set in first message.
	ShardId string `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// suffix, if set, must be set in first message.
	Suffix string `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	// block may only be empty in first message.
	Block []byte `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *WriteShardRequest) Reset() {
	*x = WriteShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_storage_service_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteShardRequest) ProtoMessage() {}

func (x *WriteShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_storage_service_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteShardRequest.ProtoReflect.Descriptor instead.
func (*WriteShardRequest) Descriptor() ([]byte, []int) {
	return file_cmd_storage_service_service_proto_rawDescGZIP(), []int{4}
}

func (x *WriteShardRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *WriteShardRequest) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *WriteShardRequest) GetBlock() []byte {
	if x != nil {
		return x.Block
	}
	return nil
}

type WriteShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sha256 []byte `protobuf:"bytes,1,opt,name=sha256,proto3" json:"sha256,omitempty"`
}

func (x *WriteShardResponse) Reset() {
	*x = WriteShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_storage_service_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteShardResponse) ProtoMessage() {}

func (x *WriteShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_storage_service_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteShardResponse.ProtoReflect.Descriptor instead.
func (*WriteShardResponse) Descriptor() ([]byte, []int) {
	return file_cmd_storage_service_service_proto_rawDescGZIP(), []int{5}
}

func (x *WriteShardResponse) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

var File_cmd_storage_service_service_proto protoreflect.FileDescriptor

var file_cmd_storage_service_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22,
	0x4c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0x32, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0x75, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x29, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x5c, 0x0a, 0x11, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x2c, 0x0a, 0x12, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x32,
	0x90, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x4f, 0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12,
	0x1d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x2d, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_storage_service_service_proto_rawDescOnce sync.Once
	file_cmd_storage_service_service_proto_rawDescData = file_cmd_storage_service_service_proto_rawDesc
)

func file_cmd_storage_service_service_proto_rawDescGZIP() []byte {
	file_cmd_storage_service_service_proto_rawDescOnce.Do(func() {
		file_cmd_storage_service_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_storage_service_service_proto_rawDescData)
	})
	return file_cmd_storage_service_service_proto_rawDescData
}

var file_cmd_storage_service_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cmd_storage_service_service_proto_goTypes = []interface{}{
	(*GetShardMetadataRequest)(nil),  // 0: codesearch.GetShardMetadataRequest
	(*GetShardMetadataResponse)(nil), // 1: codesearch.GetShardMetadataResponse
	(*ReadShardRequest)(nil),         // 2: codesearch.ReadShardRequest
	(*ReadShardResponse)(nil),        // 3: codesearch.ReadShardResponse
	(*WriteShardRequest)(nil),        // 4: codesearch.WriteShardRequest
	(*WriteShardResponse)(nil),       // 5: codesearch.WriteShardResponse
}
var file_cmd_storage_service_service_proto_depIdxs = []int32{
	0, // 0: codesearch.StorageService.GetShardMetadata:input_type -> codesearch.GetShardMetadataRequest
	2, // 1: codesearch.StorageService.ReadShard:input_type -> codesearch.ReadShardRequest
	4, // 2: codesearch.StorageService.WriteShard:input_type -> codesearch.WriteShardRequest
	1, // 3: codesearch.StorageService.GetShardMetadata:output_type -> codesearch.GetShardMetadataResponse
	3, // 4: codesearch.StorageService.ReadShard:output_type -> codesearch.ReadShardResponse
	5, // 5: codesearch.StorageService.WriteShard:output_type -> codesearch.WriteShardResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cmd_storage_service_service_proto_init() }
func file_cmd_storage_service_service_proto_init() {
	if File_cmd_storage_service_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd_storage_service_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShardMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_storage_service_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShardMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_storage_service_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_storage_service_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_storage_service_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_storage_service_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_storage_service_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cmd_storage_service_service_proto_goTypes,
		DependencyIndexes: file_cmd_storage_service_service_proto_depIdxs,
		MessageInfos:      file_cmd_storage_service_service_proto_msgTypes,
	}.Build()
	File_cmd_storage_service_service_proto = out.File
	file_cmd_storage_service_service_proto_rawDesc = nil
	file_cmd_storage_service_service_proto_goTypes = nil
	file_cmd_storage_service_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StorageServiceClient is the client API for StorageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageServiceClient interface {
	GetShardMetadata(ctx context.Context, in *GetShardMetadataRequest, opts ...grpc.CallOption) (*GetShardMetadataResponse, error)
	ReadShard(ctx context.Context, in *ReadShardRequest, opts ...grpc.CallOption) (StorageService_ReadShardClient, error)
	WriteShard(ctx context.Context, opts ...grpc.CallOption) (StorageService_WriteShardClient, error)
}

type storageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStorageServiceClient(cc grpc.ClientConnInterface) StorageServiceClient {
	return &storageServiceClient{cc}
}

func (c *storageServiceClient) GetShardMetadata(ctx context.Context, in *GetShardMetadataRequest, opts ...grpc.CallOption) (*GetShardMetadataResponse, error) {
	out := new(GetShardMetadataResponse)
	err := c.cc.Invoke(ctx, "/codesearch.StorageService/GetShardMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) ReadShard(ctx context.Context, in *ReadShardRequest, opts ...grpc.CallOption) (StorageService_ReadShardClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StorageService_serviceDesc.Streams[0], "/codesearch.StorageService/ReadShard", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageServiceReadShardClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StorageService_ReadShardClient interface {
	Recv() (*ReadShardResponse, error)
	grpc.ClientStream
}

type storageServiceReadShardClient struct {
	grpc.ClientStream
}

func (x *storageServiceReadShardClient) Recv() (*ReadShardResponse, error) {
	m := new(ReadShardResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *storageServiceClient) WriteShard(ctx context.Context, opts ...grpc.CallOption) (StorageService_WriteShardClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StorageService_serviceDesc.Streams[1], "/codesearch.StorageService/WriteShard", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageServiceWriteShardClient{stream}
	return x, nil
}

type StorageService_WriteShardClient interface {
	Send(*WriteShardRequest) error
	CloseAndRecv() (*WriteShardResponse, error)
	grpc.ClientStream
}

type storageServiceWriteShardClient struct {
	grpc.ClientStream
}

func (x *storageServiceWriteShardClient) Send(m *WriteShardRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *storageServiceWriteShardClient) CloseAndRecv() (*WriteShardResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(WriteShardResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StorageServiceServer is the server API for StorageService service.
type StorageServiceServer interface {
	GetShardMetadata(context.Context, *GetShardMetadataRequest) (*GetShardMetadataResponse, error)
	ReadShard(*ReadShardRequest, StorageService_ReadShardServer) error
	WriteShard(StorageService_WriteShardServer) error
}

// UnimplementedStorageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServiceServer struct {
}

func (*UnimplementedStorageServiceServer) GetShardMetadata(context.Context, *GetShardMetadataRequest) (*GetShardMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShardMetadata not implemented")
}
func (*UnimplementedStorageServiceServer) ReadShard(*ReadShardRequest, StorageService_ReadShardServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadShard not implemented")
}
func (*UnimplementedStorageServiceServer) WriteShard(StorageService_WriteShardServer) error {
	return status.Errorf(codes.Unimplemented, "method WriteShard not implemented")
}

func RegisterStorageServiceServer(s *grpc.Server, srv StorageServiceServer) {
	s.RegisterService(&_StorageService_serviceDesc, srv)
}

func _StorageService_GetShardMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShardMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).GetShardMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/codesearch.StorageService/GetShardMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).GetShardMetadata(ctx, req.(*GetShardMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_ReadShard_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadShardRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StorageServiceServer).ReadShard(m, &storageServiceReadShardServer{stream})
}

type StorageService_ReadShardServer interface {
	Send(*ReadShardResponse) error
	grpc.ServerStream
}

type storageServiceReadShardServer struct {
	grpc.ServerStream
}

func (x *storageServiceReadShardServer) Send(m *ReadShardResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _StorageService_WriteShard_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StorageServiceServer).WriteShard(&storageServiceWriteShardServer{stream})
}

type StorageService_WriteShardServer interface {
	SendAndClose(*WriteShardResponse) error
	Recv() (*WriteShardRequest, error)
	grpc.ServerStream
}

type storageServiceWriteShardServer struct {
	grpc.ServerStream
}

func (x *storageServiceWriteShardServer) SendAndClose(m *WriteShardResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *storageServiceWriteShardServer) Recv() (*WriteShardRequest, error) {
	m := new(WriteShardRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _StorageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "codesearch.StorageService",
	HandlerType: (*StorageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetShardMetadata",
			Handler:    _StorageService_GetShardMetadata_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadShard",
			Handler:       _StorageService_ReadShard_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WriteShard",
			Handler:       _StorageService_WriteShard_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "cmd/storage/service/service.proto",
}
