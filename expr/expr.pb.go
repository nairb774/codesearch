// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: expr/expr.proto

package expr

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// How to apply the given expression.
type ExpressionPart_Code int32

const (
	// Produce a snippet for all matches. Can not be `negated`, use
	// `MATCH`+`negated` instead.
	ExpressionPart_SNIPPET ExpressionPart_Code = 0
	// Required the expression matches the content, but no snippeting.
	ExpressionPart_MATCH ExpressionPart_Code = 1
	// Apply expression against file path.
	ExpressionPart_FILE ExpressionPart_Code = 2
	// Match against file's detected language.
	ExpressionPart_LANGUAGE ExpressionPart_Code = 3
)

// Enum value maps for ExpressionPart_Code.
var (
	ExpressionPart_Code_name = map[int32]string{
		0: "SNIPPET",
		1: "MATCH",
		2: "FILE",
		3: "LANGUAGE",
	}
	ExpressionPart_Code_value = map[string]int32{
		"SNIPPET":  0,
		"MATCH":    1,
		"FILE":     2,
		"LANGUAGE": 3,
	}
)

func (x ExpressionPart_Code) Enum() *ExpressionPart_Code {
	p := new(ExpressionPart_Code)
	*p = x
	return p
}

func (x ExpressionPart_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExpressionPart_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_expr_expr_proto_enumTypes[0].Descriptor()
}

func (ExpressionPart_Code) Type() protoreflect.EnumType {
	return &file_expr_expr_proto_enumTypes[0]
}

func (x ExpressionPart_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExpressionPart_Code.Descriptor instead.
func (ExpressionPart_Code) EnumDescriptor() ([]byte, []int) {
	return file_expr_expr_proto_rawDescGZIP(), []int{1, 0}
}

type Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parts []*ExpressionPart `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *Expression) Reset() {
	*x = Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expr_expr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_expr_expr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_expr_expr_proto_rawDescGZIP(), []int{0}
}

func (x *Expression) GetParts() []*ExpressionPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

type ExpressionPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A regular expression to apply.
	Expression string              `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	Code       ExpressionPart_Code `protobuf:"varint,2,opt,name=code,proto3,enum=codesearch.ExpressionPart_Code" json:"code,omitempty"`
	// If true, expression matches will be removed from the result set.
	Negated bool `protobuf:"varint,3,opt,name=negated,proto3" json:"negated,omitempty"`
}

func (x *ExpressionPart) Reset() {
	*x = ExpressionPart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expr_expr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressionPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionPart) ProtoMessage() {}

func (x *ExpressionPart) ProtoReflect() protoreflect.Message {
	mi := &file_expr_expr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionPart.ProtoReflect.Descriptor instead.
func (*ExpressionPart) Descriptor() ([]byte, []int) {
	return file_expr_expr_proto_rawDescGZIP(), []int{1}
}

func (x *ExpressionPart) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *ExpressionPart) GetCode() ExpressionPart_Code {
	if x != nil {
		return x.Code
	}
	return ExpressionPart_SNIPPET
}

func (x *ExpressionPart) GetNegated() bool {
	if x != nil {
		return x.Negated
	}
	return false
}

var File_expr_expr_proto protoreflect.FileDescriptor

var file_expr_expr_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x72, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x3e, 0x0a,
	0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x22, 0xb7, 0x01,
	0x0a, 0x0e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x36, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4e, 0x49, 0x50, 0x50,
	0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x41, 0x4e,
	0x47, 0x55, 0x41, 0x47, 0x45, 0x10, 0x03, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_expr_expr_proto_rawDescOnce sync.Once
	file_expr_expr_proto_rawDescData = file_expr_expr_proto_rawDesc
)

func file_expr_expr_proto_rawDescGZIP() []byte {
	file_expr_expr_proto_rawDescOnce.Do(func() {
		file_expr_expr_proto_rawDescData = protoimpl.X.CompressGZIP(file_expr_expr_proto_rawDescData)
	})
	return file_expr_expr_proto_rawDescData
}

var file_expr_expr_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_expr_expr_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_expr_expr_proto_goTypes = []interface{}{
	(ExpressionPart_Code)(0), // 0: codesearch.ExpressionPart.Code
	(*Expression)(nil),       // 1: codesearch.Expression
	(*ExpressionPart)(nil),   // 2: codesearch.ExpressionPart
}
var file_expr_expr_proto_depIdxs = []int32{
	2, // 0: codesearch.Expression.parts:type_name -> codesearch.ExpressionPart
	0, // 1: codesearch.ExpressionPart.code:type_name -> codesearch.ExpressionPart.Code
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_expr_expr_proto_init() }
func file_expr_expr_proto_init() {
	if File_expr_expr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_expr_expr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expr_expr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressionPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_expr_expr_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_expr_expr_proto_goTypes,
		DependencyIndexes: file_expr_expr_proto_depIdxs,
		EnumInfos:         file_expr_expr_proto_enumTypes,
		MessageInfos:      file_expr_expr_proto_msgTypes,
	}.Build()
	File_expr_expr_proto = out.File
	file_expr_expr_proto_rawDesc = nil
	file_expr_expr_proto_goTypes = nil
	file_expr_expr_proto_depIdxs = nil
}
